<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">
<head>
    <title>To-Do List</title>
</head>
<body>
    <h1>To-Do List</h1>
    <form th:action="@{/add}" th:object="${newTodo}" method="post">
        <input type="text" th:field="*{task}" placeholder="Add a new task" required />
        <button type="submit">Add</button>
    </form>
    <ul>
        <li th:each="todo : ${todos}">
            <span th:text="${todo.task}" 
                  th:style="${todo.completed} ? 'text-decoration: line-through' : ''"></span>
            <a th:href="@{/complete/{id}(id=${todo.id})}">Complete</a>
            <a th:href="@{/delete/{id}(id=${todo.id})}">Delete</a>
        </li>
    </ul>
</body>
</html>



package com.example.todolist;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {
    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http
            .authorizeHttpRequests(auth -> auth
                .requestMatchers("/h2-console/**", "/", "/add", "/complete/**", "/delete/**").permitAll() // Dozvoli pristup svim endpointima
                .anyRequest().authenticated()
            )
            .csrf(csrf -> csrf
                .ignoringRequestMatchers("/h2-console/**") // Isključi CSRF za H2
            )
            .headers(headers -> headers
                .frameOptions().disable() // Omogući iframe za H2 konzolu
            );
        return http.build();
    }
}



# H2 Baza
spring.datasource.url=jdbc:h2:mem:tododb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password